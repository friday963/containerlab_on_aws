---
- name: Connect to EC2 instance
  hosts: container_lab_instance
  gather_facts: false
  vars_files:
    - vars.yml
  tasks:
    - name: Create container_images folder
      file:
        path: "{{ec2_images_path}}"
        state: directory
      tags: 
        - create_folders
    - name: Create containerlab_environment folder
      file:
        path: "{{ec2_containerlab_environment}}"
        state: directory
      tags: 
        - create_folders

    - name: Find file types associated with containerlab topology
      find:
        paths: "cl_topology_images/"
        patterns: "*.yaml,*.yml"
        recurse: no
      register: yaml_files
      delegate_to: localhost
      tags: 
        - upload_containerlab_files

    - name: Find container images ending in .tar
      find: 
        paths: "cl_topology_images/"
        patterns: "*.tar"
        recurse: no
      register: tar_files
      delegate_to: localhost
      tags: 
        - upload_containerlab_files

    - name: "Copy YAML/YML files to {{ec2_containerlab_environment}}"
      copy:
        src: "{{ item.path }}"
        dest: "{{ec2_containerlab_environment}}"
      loop: "{{ yaml_files.files }}"
      when: yaml_files.files | length > 0
      tags: 
        - upload_containerlab_files

    - name: "Copy TAR files to {{ec2_images_path}}"
      copy:
        src: "{{ item.path }}"
        dest: "{{ec2_images_path}}"
      loop: "{{ tar_files.files }}"
      when: tar_files.files | length > 0
      tags: 
        - upload_containerlab_files

- name: Become elevated for docker processes
  hosts: container_lab_instance
  gather_facts: true
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      tags: 
        - install_docker
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
        state: present
      tags: 
        - install_docker
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      tags: 
        - install_docker
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker
      tags: 
        - install_docker
    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      tags: 
        - install_docker
    - name: Start docker
      systemd:
        name: docker
        state: started
        enabled: yes
      tags: 
        - configure_docker
    - name: "Add {{ec2_user_name}} to docker group"
      user:
        name: "{{ec2_user_name}}"
        groups: docker
        append: yes
      notify: 
        - restart docker service
      tags: 
        - configure_docker
    - name: Look for tar files on remote host
      find:
        paths: "{{ec2_images_path}}"
        patterns: "*.tar"
        recurse: no
      register: tar_files
    - name: Load images into docker from tarball.
      command: "docker import {{item.path}} {{item.path | basename | regex_replace('.tar', '') | lower}}"
      loop: "{{tar_files.files}}"
      loop_control:
        loop_var: item
      when: tar_files.matched > 0
      tags: 
        - import_docker_images
    - name: Install containerlab
      shell: bash -c "$(curl -sL https://get.containerlab.dev)"
      tags: 
        - configure_containerlab
  handlers:
    - name: restart docker service
      service:
        name: docker
        state: restarted